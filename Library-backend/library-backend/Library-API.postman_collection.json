{
  "info": {
    "name": "Library Management API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Add Book",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"title\": \"Refactoring\",\n  \"author\": \"Martin Fowler\",\n  \"isbn\": \"9780201485677\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/books",
          "host": ["{{baseUrl}}"],
          "path": ["books"]
        },
        "description": "Add a new book to the library"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 201\", () => pm.response.to.have.status(201));",
              "const json = pm.response.json();",
              "pm.environment.set(\"lastBookId\", json._id);",
              "pm.expect(json).to.have.property(\"isbn\");"
            ]
          }
        }
      ]
    },
    {
      "name": "Get All Books",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/books",
          "host": ["{{baseUrl}}"],
          "path": ["books"]
        },
        "description": "Fetch all available books"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Response is array\", () => pm.expect(pm.response.json()).to.be.an(\"array\"));"
            ]
          }
        }
      ]
    },
    {
      "name": "Search Books",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/books?search=9780201485677",
          "host": ["{{baseUrl}}"],
          "path": ["books"],
          "query": [
            { "key": "search", "value": "9780201485677" }
          ]
        },
        "description": "Search books by title/author/ISBN"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
              "pm.test(\"Response is array\", () => pm.expect(pm.response.json()).to.be.an(\"array\"));"
            ]
          }
        }
      ]
    },
    {
      "name": "Borrow Book",
      "request": {
        "method": "PATCH",
        "url": {
          "raw": "{{baseUrl}}/books/{{lastBookId}}/borrow",
          "host": ["{{baseUrl}}"],
          "path": ["books", "{{lastBookId}}", "borrow"]
        },
        "description": "Borrow a book (set available = false)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.expect(json.available).to.eql(false);"
            ]
          }
        }
      ]
    },
    {
      "name": "Return Book",
      "request": {
        "method": "PATCH",
        "url": {
          "raw": "{{baseUrl}}/books/{{lastBookId}}/return",
          "host": ["{{baseUrl}}"],
          "path": ["books", "{{lastBookId}}", "return"]
        },
        "description": "Return a book (set available = true)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status 200\", () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.expect(json.available).to.eql(true);"
            ]
          }
        }
      ]
    }
  ]
}
